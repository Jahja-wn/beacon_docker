version: '3'

services:
  elastic:
    container_name: elastic
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.1
    environment:
      - node.name=es01
      - cluster.initial_master_nodes=es01
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - TZ=Asia/Bangkok
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
    networks: 
      - esnet
    
  kibana:
    container_name: kibana
    restart: always
    image: docker.elastic.co/kibana/kibana:7.3.1
    networks:
      - esnet
    environment:
      - TZ=Asia/Bangkok
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
      - ./kibana/img/green.png:/usr/share/kibana/optimize/bundles/src/legacy/ui/public/field_editor/components/field_format_editor/editors/url/icons/green.png
      - ./kibana/img/grey.png:/usr/share/kibana/optimize/bundles/src/legacy/ui/public/field_editor/components/field_format_editor/editors/url/icons/grey.png
      - ./kibana/commons.style.css:/usr/share/kibana/optimize/bundles/commons.style.css
    ports:
      - 5601:5601
    depends_on: 
      - elastic

  node:
    container_name: node
    restart: always
    image: node:10.16-alpine
    user: node
    working_dir: /home/node/beacon
    networks:
      - esnet
      - appnet
    environment:
      - NODE_ENV=production
      - MONGODB_URL=${MONGODB_URL}
      - channelAccessToken=${channelAccessToken}
      - channelSecret=${channelSecret}
      - reportGroupId=${reportGroupId}
      - elasticConfig=http://elastic:9200
      - ELASTIC_URL=http://elastic:9200
      - TZ=Asia/Bangkok
    volumes:
      - ../beacon:/home/node/beacon
    ports:
      - 3000:3001
    command: "npm run dev"

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    restart: always
    user: jenkins
    working_dir: /home/jenkins/beacon
    ports:
      - 8080:8080
      - 50000:50000
    environment:
      - TZ=Asia/Bangkok
    volumes:
      - ./jenkins:/var/jenkins_home
      - ../beacon:/home/jenkins/beacon
      - ../docker:/home/jenkins/beacon_docker

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    environment:
      - TZ=Asia/Bangkok
    volumes:
      - app-dir:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - ./certbot-etc:/etc/letsencrypt
      - ./certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - node
    networks:
      - appnet

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot-etc:/etc/letsencrypt
      - ./certbot-var:/var/lib/letsencrypt
      - app-dir:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email jitlada.supreeyaporn@global.ntt --agree-tos --no-eff-email -d linebeacon-test.southeastasia.cloudapp.azure.com

volumes:
  app-dir:
    driver: local
    driver_opts:
      type: none
      device: /home/LineBeaconAdmin/beacon
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/LineBeaconAdmin/docker/dhparam/
      o: bind

networks:
  appnet:
    driver: bridge
  esnet:

